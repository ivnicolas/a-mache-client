import React, { Component } from 'react';
import {connect} from "react-redux"
import { fetchSubcategories } from '../redux/actions/subcategoryActions.js';
import { Link } from 'react-router-dom';

const Subcategories = (props) => {
        return (
            <div className="subcategories">
                {props.subcategories.map(subcategory =>
                    <li  key={subcategory.id} ><Link to={`/subcategories/${subcategory.id}/posts`}>{subcategory.name}</Link></li>)}
            </div>
        );
    
}

function mapStateToProps(globalState,ownProps) {
    return {
        subcategories:globalState.subcategory.filter(x => x.category_id === ownProps.category_id)
    }
}

export default connect(mapStateToProps,{fetchSubcategories})(Subcategories);

//     // map state to props can take in two arguments. state and ownProps. own Props is used 
//     // if your component needs the data from its own props to retrieve data from the store. This argument will contain all 
//     // of the props given to the wrapper component that was generated by connect.